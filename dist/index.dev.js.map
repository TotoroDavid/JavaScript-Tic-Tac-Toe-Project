{"version":3,"sources":["index.js"],"names":["origBoard","huPlayer","aiPlayer","winCombos","cells","document","querySelectorAll","startGame","querySelector","style","display","Array","from","keys","i","length","innerText","removeProperty","addEventListener","turnClick","square","target","id","turn","checkWin","checkTie","bestSpot","squareId","player","getElementById","gameWon","gameOver","board","plays","reduce","a","e","concat","entries","index","win","every","elem","indexOf","backgroundColor","removeEventListener","declareWinner","who","emptySquares","filter","s","minimax","newBoard","availSpots","score","moves","move","result","push","bestMove","bestScore"],"mappings":"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","sourcesContent":["var origBoard;\nconst huPlayer = 'O';\nconst aiPlayer = 'X';\nconst winCombos = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [6, 4, 2]\n]\n\nconst cells = document.querySelectorAll('.cell');\nstartGame();\n\nfunction startGame() {\n    document.querySelector(\".endgame\").style.display = \"none\";\n    origBoard = Array.from(Array(9).keys());\n    for (var i = 0; i < cells.length; i++) {\n        cells[i].innerText = '';\n        cells[i].style.removeProperty('background-color');\n        cells[i].addEventListener('click', turnClick, false);\n    }\n}\n\nfunction turnClick(square) {\n    if (typeof origBoard[square.target.id] == 'number') {\n        turn(square.target.id, huPlayer)\n        if (!checkWin(origBoard, huPlayer) && !checkTie()) turn(bestSpot(), aiPlayer);\n    }\n}\n\nfunction turn(squareId, player) {\n    origBoard[squareId] = player;\n    document.getElementById(squareId).innerText = player;\n    let gameWon = checkWin(origBoard, player)\n    if (gameWon) gameOver(gameWon)\n}\n\nfunction checkWin(board, player) {\n    let plays = board.reduce((a, e, i) =>\n        (e === player) ? a.concat(i) : a, []);\n    let gameWon = null;\n    for (let [index, win] of winCombos.entries()) {\n        if (win.every(elem => plays.indexOf(elem) > -1)) {\n            gameWon = { index: index, player: player };\n            break;\n        }\n    }\n    return gameWon;\n}\n\nfunction gameOver(gameWon) {\n    for (let index of winCombos[gameWon.index]) {\n        document.getElementById(index).style.backgroundColor =\n            gameWon.player == huPlayer ? \"blue\" : \"red\";\n    }\n    for (var i = 0; i < cells.length; i++) {\n        cells[i].removeEventListener('click', turnClick, false);\n    }\n    declareWinner(gameWon.player == huPlayer ? \"You win!\" : \"You lose.\");\n}\n\nfunction declareWinner(who) {\n    document.querySelector(\".endgame\").style.display = \"block\";\n    document.querySelector(\".endgame .text\").innerText = who;\n}\n\nfunction emptySquares() {\n    return origBoard.filter(s => typeof s == 'number');\n}\n\nfunction bestSpot() {\n    return minimax(origBoard, aiPlayer).index;\n}\n\nfunction checkTie() {\n    if (emptySquares().length == 0) {\n        for (var i = 0; i < cells.length; i++) {\n            cells[i].style.backgroundColor = \"green\";\n            cells[i].removeEventListener('click', turnClick, false);\n        }\n        declareWinner(\"Tie Game!\")\n        return true;\n    }\n    return false;\n}\n\nfunction minimax(newBoard, player) {\n    var availSpots = emptySquares();\n\n    if (checkWin(newBoard, huPlayer)) {\n        return { score: -10 };\n    } else if (checkWin(newBoard, aiPlayer)) {\n        return { score: 10 };\n    } else if (availSpots.length === 0) {\n        return { score: 0 };\n    }\n    var moves = [];\n    for (var i = 0; i < availSpots.length; i++) {\n        var move = {};\n        move.index = newBoard[availSpots[i]];\n        newBoard[availSpots[i]] = player;\n\n        if (player == aiPlayer) {\n            var result = minimax(newBoard, huPlayer);\n            move.score = result.score;\n        } else {\n            var result = minimax(newBoard, aiPlayer);\n            move.score = result.score;\n        }\n\n        newBoard[availSpots[i]] = move.index;\n\n        moves.push(move);\n    }\n\n    var bestMove;\n    if (player === aiPlayer) {\n        var bestScore = -10000;\n        for (var i = 0; i < moves.length; i++) {\n            if (moves[i].score > bestScore) {\n                bestScore = moves[i].score;\n                bestMove = i;\n            }\n        }\n    } else {\n        var bestScore = 10000;\n        for (var i = 0; i < moves.length; i++) {\n            if (moves[i].score < bestScore) {\n                bestScore = moves[i].score;\n                bestMove = i;\n            }\n        }\n    }\n\n    return moves[bestMove];\n}"],"file":"index.dev.js"}